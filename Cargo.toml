[package]
name = "irpc"
version = "2.1.0"
edition = "2021"
description = "Robotic node interaction protocol"
license = "GPL-3.0"
repository = "https://github.com/angkira/iRPC"
keywords = ["robotics", "rpc", "protocol", "embedded"]
categories = ["network-programming", "embedded", "no-std"]

[features]
default = []

# Feature for std host environments (includes async runtime and logging)
arm_api = ["async-trait", "tokio", "tracing", "thiserror", "postcard/use-std"]

# Feature for no_std embedded environments
joint_api = []

# Hardware-specific transport implementations (require joint_api)
stm32g4 = ["joint_api", "embassy-stm32", "embassy-stm32/stm32g431cb", "embassy-time", "embassy-time/tick-hz-32_768", "defmt"]
stm32f4 = ["joint_api", "embassy-stm32", "embassy-stm32/stm32f446re", "embassy-time", "embassy-time/tick-hz-32_768", "defmt"]
# Future: stm32h7, rp2040, nrf52, etc.

[dependencies]
# Core dependencies for all features
serde = { version = "1.0", features = ["derive"], default-features = false }
postcard = { version = "1.0", default-features = false, features = ["alloc"] }

# Optional dependencies activated by arm_api feature
async-trait = { version = "0.1", optional = true }
tokio = { version = "1.0", features = ["full"], optional = true }
tracing = { version = "0.1", optional = true }
thiserror = { version = "2.0", optional = true }

# Optional embedded HAL dependencies (for concrete transports)
embassy-stm32 = { version = "0.4", optional = true, default-features = false }
embassy-time = { version = "0.5", optional = true, default-features = false }
defmt = { version = "1.0", optional = true }

[dev-dependencies]
tokio-test = "0.4"
tracing-subscriber = "0.3"

# Exclude embedded-only examples from default test runs
[[example]]
name = "stm32g4_firmware"
required-features = ["stm32g4"]
